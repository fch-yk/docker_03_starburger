services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile-backend
    container_name: starburger-backend
    depends_on:
      - frontend
      - db
    command: gunicorn star_burger.wsgi:application -w 3 --bind 0.0.0.0:8000
    volumes:
      - type: volume
        source: static
        target: /app/staticfiles
      - type: volume
        source: media
        target: /app/media
    expose:
      - 8000
    env_file: .env
    restart: always

  frontend:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    container_name: starburger-frontend
    command: ./node_modules/.bin/parcel watch bundles-src/index.js --dist-dir bundles --public-url="./"
    restart: always

  db:
    image: postgres:15.3-alpine
    container_name: starburger-db
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data/
    env_file: .env
    restart: always

  nginx:
    build:
      context: ./nginx
    container_name: starburger-nginx
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: static
        target: /srv/www/starburger/staticfiles
      - type: volume
        source: media
        target: /srv/www/starburger/media
    depends_on:
      - backend
    restart: always

volumes:
  media:
  static:
  postgres:
